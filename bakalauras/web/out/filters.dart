// Auto-generated from filters.html.
// DO NOT EDIT.

library filters_html;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'dart:html';
import 'package:web_ui/watcher.dart' as watchers;
import '../tests/tests.dart';


// Original code


var selected = new List(10);
var activeTab = new List(10);
var active = 0;

void main() {
  
  initMenu();
  
  query('#kalmanTest').onClick.listen((MouseEvent event) {
    event.preventDefault();
    num time = double.parse(query('#kalmanTime').value);
    num pNoise = double.parse(query('#kalmanPNoise').value);
    num mNoise = double.parse(query('#kalmanMNoise').value);
    num Ex1 = double.parse(query('#kalmanEx1').value);
    num Ez1 = double.parse(query('#kalmanEz1').value);
    num Ex2 = double.parse(query('#kalmanEx2').value);
    num Ez2 = double.parse(query('#kalmanEz2').value);
    new KalmanTest(time, mNoise, pNoise, Ex1, Ez1, Ex2, Ez2);
  });
  

  query('#particlesTest').onClick.listen((MouseEvent event) {
    event.preventDefault();
    num time = double.parse(query('#particlesTime').value);
    num pNoise = double.parse(query('#particlesPNoise').value);
    num mNoise = double.parse(query('#particlesMNoise').value);
    num count1 = double.parse(query('#particlesCount1').value);
    num count2 = double.parse(query('#particlesCount1').value);
    new ParticlesTest(time, mNoise, pNoise, count1, count2);
  });
  
  
  //new SimpleTest();
  query('#simpleTest').onClick.listen((MouseEvent event) {
    event.preventDefault();
    num pNoise = double.parse(query('#pNoise').value);
    num mNoise = double.parse(query('#mNoise').value);
    num pCount = int.parse(query('#pCount').value);
    new SimpleTest(mNoise, pNoise, pCount);
  });
  
  query('#moveTest').onClick.listen((MouseEvent event) {
    event.preventDefault();
    num pNoise = double.parse(query('#pNoise1').value);
    num mNoise = double.parse(query('#mNoise1').value);
    num pCount = int.parse(query('#pCount1').value);
    new MoveTest(mNoise, pNoise, pCount); 
  }); 
  
  new WalkTest();
  
}

void initMenu() {

  for (var i = 0; i < selected.length; i++) {
    selected[i] = 'hide';  
    activeTab[i] = '';
  }
  
  void select(int newActive) {
    selected[active] = 'hide';
    activeTab[active] = '';
    active = newActive;
    selected[active] = 'show';
    activeTab[active] = 'active';
    watchers.dispatch();
  };
  
  queryAll('.tab').forEach((var e) {
    e.classes.add('hide');
    e.onClick.listen((var event) {
      select(int.parse(e.attributes['x-tab']));
    });
  });
  
  select(0); 
  
}

// Additional generated code
void init_autogenerated() {
  var __root = autogenerated.document.body;
  var __e0, __e1, __e10, __e2, __e3, __e4, __e5, __e6, __e7, __e8, __e9;
  var __t = new autogenerated.Template(__root);
  __e0 = __root.nodes[1].nodes[1].nodes[3].nodes[1];
  __t.bindClass(__e0, () => activeTab[0], false);
  __e1 = __root.nodes[1].nodes[1].nodes[3].nodes[3];
  __t.bindClass(__e1, () => activeTab[1], false);
  __e2 = __root.nodes[1].nodes[1].nodes[3].nodes[5];
  __t.bindClass(__e2, () => activeTab[2], false);
  __e3 = __root.nodes[1].nodes[1].nodes[3].nodes[7];
  __t.bindClass(__e3, () => activeTab[3], false);
  __e4 = __root.nodes[1].nodes[1].nodes[3].nodes[9];
  __t.bindClass(__e4, () => activeTab[4], false);
  __e5 = __root.nodes[1].nodes[1].nodes[3].nodes[11];
  __t.bindClass(__e5, () => activeTab[5], false);
  __e6 = __root.nodes[3].nodes[1];
  __t.bindClass(__e6, () => selected[1], false);
  __e7 = __root.nodes[3].nodes[3];
  __t.bindClass(__e7, () => selected[0], false);
  __e8 = __root.nodes[3].nodes[5];
  __t.bindClass(__e8, () => selected[1], false);
  __e9 = __root.nodes[3].nodes[7];
  __t.bindClass(__e9, () => selected[1], false);
  __e10 = __root.nodes[3].nodes[9];
  __t.bindClass(__e10, () => selected[2], false);
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=filters.dart.map